// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrintingJob.Data;

#nullable disable

namespace PrintingJob.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PrintingJob.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Carrier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("SLA_MailBy")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Carrier = "USPS",
                            ClientName = "ACME Corp",
                            CreatedAt = new DateTime(2025, 9, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentStatus = "Received",
                            JobName = "Brochure Q1",
                            Quantity = 500,
                            SLA_MailBy = new DateTime(2025, 9, 15, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Carrier = "UPS",
                            ClientName = "Beta LLC",
                            CreatedAt = new DateTime(2025, 9, 2, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            CurrentStatus = "Printing",
                            JobName = "Sticker Run",
                            Quantity = 2000,
                            SLA_MailBy = new DateTime(2025, 9, 10, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Carrier = "FedEx",
                            ClientName = "Gamma Inc",
                            CreatedAt = new DateTime(2025, 9, 3, 8, 15, 0, 0, DateTimeKind.Unspecified),
                            CurrentStatus = "Inserting",
                            JobName = "Catalog 2025",
                            Quantity = 1200,
                            SLA_MailBy = new DateTime(2025, 9, 20, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Carrier = "USPS",
                            ClientName = "Delta Co",
                            CreatedAt = new DateTime(2025, 9, 4, 11, 45, 0, 0, DateTimeKind.Unspecified),
                            CurrentStatus = "Mailed",
                            JobName = "Postcards",
                            Quantity = 10000,
                            SLA_MailBy = new DateTime(2025, 9, 18, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Carrier = "UPS",
                            ClientName = "Epsilon",
                            CreatedAt = new DateTime(2025, 9, 5, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentStatus = "Delivered",
                            JobName = "Manuals",
                            Quantity = 300,
                            SLA_MailBy = new DateTime(2025, 9, 25, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Carrier = "FedEx",
                            ClientName = "Zeta Solutions",
                            CreatedAt = new DateTime(2025, 9, 6, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            CurrentStatus = "Received",
                            JobName = "Promo Cards",
                            Quantity = 2500,
                            SLA_MailBy = new DateTime(2025, 9, 22, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Carrier = "USPS",
                            ClientName = "Eta Partners",
                            CreatedAt = new DateTime(2025, 9, 7, 8, 45, 0, 0, DateTimeKind.Unspecified),
                            CurrentStatus = "Printing",
                            JobName = "Labels",
                            Quantity = 8000,
                            SLA_MailBy = new DateTime(2025, 9, 14, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            Carrier = "UPS",
                            ClientName = "Theta Ltd",
                            CreatedAt = new DateTime(2025, 9, 8, 13, 20, 0, 0, DateTimeKind.Unspecified),
                            CurrentStatus = "Exception",
                            JobName = "Stickers Large",
                            Quantity = 1500,
                            SLA_MailBy = new DateTime(2025, 9, 30, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            Carrier = "FedEx",
                            ClientName = "Iota Group",
                            CreatedAt = new DateTime(2025, 9, 9, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentStatus = "Inserting",
                            JobName = "Invitation Set",
                            Quantity = 600,
                            SLA_MailBy = new DateTime(2025, 9, 19, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            Carrier = "USPS",
                            ClientName = "Kappa Works",
                            CreatedAt = new DateTime(2025, 9, 10, 15, 10, 0, 0, DateTimeKind.Unspecified),
                            CurrentStatus = "Mailed",
                            JobName = "Catalog Reprint",
                            Quantity = 400,
                            SLA_MailBy = new DateTime(2025, 9, 28, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("PrintingJob.Models.JobStatusHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("JobStatusHistories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChangedAt = new DateTime(2025, 9, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = 1,
                            Note = "Initial received",
                            Status = "Received"
                        },
                        new
                        {
                            Id = 2,
                            ChangedAt = new DateTime(2025, 9, 2, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            JobId = 2,
                            Note = "Initial received",
                            Status = "Received"
                        },
                        new
                        {
                            Id = 3,
                            ChangedAt = new DateTime(2025, 9, 2, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = 2,
                            Note = "Started print run",
                            Status = "Printing"
                        },
                        new
                        {
                            Id = 4,
                            ChangedAt = new DateTime(2025, 9, 3, 8, 15, 0, 0, DateTimeKind.Unspecified),
                            JobId = 3,
                            Note = "Initial received",
                            Status = "Received"
                        },
                        new
                        {
                            Id = 5,
                            ChangedAt = new DateTime(2025, 9, 4, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = 3,
                            Note = "Printed pages",
                            Status = "Printing"
                        },
                        new
                        {
                            Id = 6,
                            ChangedAt = new DateTime(2025, 9, 5, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = 3,
                            Note = "Inserted into envelopes",
                            Status = "Inserting"
                        },
                        new
                        {
                            Id = 7,
                            ChangedAt = new DateTime(2025, 9, 4, 11, 45, 0, 0, DateTimeKind.Unspecified),
                            JobId = 4,
                            Note = "Initial received",
                            Status = "Received"
                        },
                        new
                        {
                            Id = 8,
                            ChangedAt = new DateTime(2025, 9, 5, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = 4,
                            Note = "Printed",
                            Status = "Printing"
                        },
                        new
                        {
                            Id = 9,
                            ChangedAt = new DateTime(2025, 9, 6, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = 4,
                            Note = "Inserted",
                            Status = "Inserting"
                        },
                        new
                        {
                            Id = 10,
                            ChangedAt = new DateTime(2025, 9, 7, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = 4,
                            Note = "Shipped via USPS",
                            Status = "Mailed"
                        },
                        new
                        {
                            Id = 11,
                            ChangedAt = new DateTime(2025, 9, 5, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = 5,
                            Note = "Initial received",
                            Status = "Received"
                        },
                        new
                        {
                            Id = 12,
                            ChangedAt = new DateTime(2025, 9, 6, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = 5,
                            Note = "Printed",
                            Status = "Printing"
                        },
                        new
                        {
                            Id = 13,
                            ChangedAt = new DateTime(2025, 9, 10, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = 5,
                            Note = "Delivered",
                            Status = "Mailed"
                        });
                });

            modelBuilder.Entity("PrintingJob.Models.JobStatusHistory", b =>
                {
                    b.HasOne("PrintingJob.Models.Job", "Job")
                        .WithMany("StatusHistory")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("PrintingJob.Models.Job", b =>
                {
                    b.Navigation("StatusHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
